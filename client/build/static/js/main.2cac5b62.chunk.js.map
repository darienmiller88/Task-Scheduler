{"version":3,"sources":["components/PostForm/PostForm.js","pages/SignupPage/SignupPage.js","pages/SigninPage/SigninPage.js","components/Nav/Nav.js","components/BaseUrl/BaseUrl.js","components/Port/Port.js","components/Reminder/Reminder.js","img/loading.gif","pages/DashboardPage/DashboardPage.js","components/Days/Days.js","components/PostReminderForm/PostReminderForm.js","pages/SetReminderPage/SetReminderPage.js","pages/404/404.js","App.js","index.js"],"names":["PostForm","props","header","SignupPage","useEffect","document","title","SigninPage","Nav","className","type","id","href","base","window","location","hostname","Reminder","deleteReminder","a","removeReminderFromForm","axios","delete","BaseUrl","response","console","log","reminderName","date","time","onClick","editReminder","DashboardPage","useState","reminders","setReminders","error","setError","isLoading","setIsLoading","get","Url","data","getReminders","updatedReminders","filter","reminder","src","loading","height","width","alt","map","days","join","Days","CHECKED_COLOR","ref","innerRef","e","target","classList","contains","style","backgroundColor","noDaysAdded","color","PostReminderForm","daysRef","useRef","formRef","setNoDaysAdded","postReminder","post","prepareSingleOccuringForm","resetForm","getFormattedTime","prepareReoccuringForm","daysChecked","getCheckedDays","length","setTimeout","checkedDays","current","querySelectorAll","forEach","day","push","textContent","trim","input","value","formattedTime","split","hour","parseInt","meridiem","toString","onSubmit","preventDefault","formData","FormData","isSingleOccuring","htmlFor","name","placeholder","required","min","defaultValue","currentDate","currentTime","onChange","adjustDateMinimum","SetReminderPage","setSingleOccuring","setDate","setTime","dateMin","setDateMin","singleOccuringButtonRef","reoccuringButtonRef","Date","formattedDate","getFullYear","getMonth","getDate","add","remove","currentHour","getHours","currentMintues","getMinutes","inputHour","inputMinutes","NotFound","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cac5b62.chunk.js","sourcesContent":["import React from 'react'\r\nimport './PostForm.css'\r\n\r\nexport default function PostForm(props) {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {props.header}\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './SignupPage.css'\r\nimport PostForm from '../../components/PostForm/PostForm'\r\n//import { useHistory } from 'react-router-dom';\r\n  \r\n\r\nexport default function SignupPage() {\r\n    useEffect(() => {\r\n        document.title = \"Sign up\"\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <PostForm header={\"Signing up!\"}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './SigninPage.css'\r\nimport PostForm from '../../components/PostForm/PostForm'\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function SigninPage() {\r\n    //let history = useHistory()\r\n    useEffect(() => {\r\n        document.title = \"Sign in\"\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <PostForm header={\"Signing in!\"}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './Nav.css'\r\n//import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <a className=\"navbar-brand\" href=\"/\">Oshane's Reminders Dashboard</a>\r\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\" id=\"navBarItems\">\r\n                <li className=\"nav-item\" id=\"home-link\">\r\n                <a className=\"nav-link\" href=\"/\">Home </a>\r\n                </li>\r\n                <li className=\"nav-item\" id=\"set-reminder-link\">\r\n                <a className=\"nav-link\" href=\"/set-reminder\">Set Reminder</a>\r\n                </li>\r\n            </ul>\r\n            <button className=\"sign-out-btn\" >Sign out</button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import Port from \"../Port/Port\"\r\n\r\nconst base =  window.location.hostname === \"localhost\" ? `http://localhost:${Port}/api/v1/reminders/` : `https://thetaskscheduler.herokuapp.com/api/v1/reminders/`\r\n\r\nexport default base ","const port = 8080\r\n\r\nexport default port","import React from 'react'\r\nimport axios from \"axios\"\r\nimport './Reminder.css'\r\nimport BaseUrl from \"../BaseUrl/BaseUrl\"\r\n\r\nexport default function Reminder(props) {\r\n    const deleteReminder = async () => {\r\n        //First, remove the reminder from the array so it gets removed without having to refresh the page.\r\n        props.removeReminderFromForm(props.id)\r\n\r\n        //Afterwards, remove it from the database by sending a delete request to the server.\r\n        try {\r\n            const response = await axios.delete(`${BaseUrl}/${props.id}`)\r\n\r\n            console.log(\"delete Response:\", response);\r\n        } catch (error) {\r\n            console.log(\"err:\", error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"reminder\" id={ props.id } data-bs-toggle=\"modal\" data-bs-target=\"editModalName\">\r\n            <div className=\"reminder-name\">\r\n                { props.reminderName }\r\n            </div>\r\n            <div className=\"info-block\">\r\n                <span className=\"date\">\r\n                    {  props.date }                    \r\n                    <span className=\"time\"> { props.time } </span>\r\n                </span>\r\n                <button className=\"edit\" onClick={() => props.editReminder(props.id)}>edit</button>\r\n                <button className=\"delete\" onClick={deleteReminder}>delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.c2029c13.gif\";","import React, { Fragment, useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport './DashboardPage.css'\r\nimport '../../components/Scrollbar/Scrollbar.css'\r\nimport Nav from '../../components/Nav/Nav'\r\nimport Reminder from '../../components/Reminder/Reminder'\r\nimport loading from \"../../img/loading.gif\"\r\nimport Url from \"../../components/BaseUrl/BaseUrl\"\r\n\r\nexport default function DashboardPage() {\r\n    const [reminders, setReminders] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        async function getReminders(){\r\n            try {\r\n                const response = await axios.get(Url)\r\n                setReminders(response.data)\r\n            } catch (err) {\r\n                setError(err)\r\n                console.log(\"err:\", err);\r\n            }\r\n        }\r\n        getReminders()\r\n        setIsLoading(false)\r\n        document.title = \"Dashboard\"\r\n    }, [])\r\n\r\n    console.log(\"isloading:\", isLoading);\r\n\r\n    const editReminder = id => {\r\n        console.log(\"editing reminder:\", id);\r\n    }\r\n\r\n    const removeReminderFromForm = id => {\r\n        const updatedReminders = reminders.filter(reminder => id !== reminder.id)\r\n        setReminders(updatedReminders)\r\n    }\r\n    \r\n    if(error){\r\n        return error\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Nav/>     \r\n            <h1>Upcoming Reminders</h1>\r\n\r\n            {\r\n                isLoading \r\n                ?\r\n                <div className=\"loading\">\r\n                    <img src={loading} height=\"150\" width=\"150\" alt=\"loading\"/>\r\n                </div>\r\n                :\r\n                <div className = \"reminders\">\r\n                {\r\n                    reminders.map(reminder => \r\n                        <Reminder\r\n                            key = {reminder.id}\r\n                            id = {reminder.id}\r\n                            date = {reminder.date ? reminder.date : reminder.days.join(\", \") + \",\"}\r\n                            time = {reminder.time}                            \r\n                            reminderName = {reminder.reminder}\r\n                            editReminder = {editReminder}\r\n                            removeReminderFromForm = {removeReminderFromForm}\r\n                        />\r\n                    )\r\n                }\r\n                </div>\r\n            }\r\n\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment }  from 'react'\r\nimport \"./Days.css\"\r\n\r\nexport default function Days(props) {\r\n    const CHECKED_COLOR = \"green\"\r\n    const UNCHECKED_COLOR = \"rgb(211,211,211)\"\r\n\r\n    const checkDay = (e) => {\r\n        if(e.target.classList.contains(\"day\")){\r\n            if( e.target.style.backgroundColor === CHECKED_COLOR){\r\n                e.target.style.backgroundColor = UNCHECKED_COLOR\r\n            }else{\r\n                e.target.style.backgroundColor = CHECKED_COLOR\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"select-days-title\">Select days to repeat reminder</div>\r\n            <div className=\"days\" ref={props.innerRef} onClick={checkDay}>    \r\n                <span className=\"Su day\">Su</span>\r\n                <span className=\"Mo day\">Mo</span>\r\n                <span className=\"Tu day\">Tu</span>\r\n                <span className=\"We day\">We</span>\r\n                <span className=\"Th day\">Th</span>\r\n                <span className=\"Fr day\">Fr</span>\r\n                <span className=\"Sa day\">Sa</span>\r\n            </div>                    \r\n            {\r\n                props.noDaysAdded \r\n                ? \r\n                <div className=\"days-error\" style={{color: \"red\"}}>{\"Please add at least one day!\"}</div>\r\n                : \r\n                null\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport \"./PostReminderForm.css\"\r\nimport Days from '../Days/Days'\r\nimport axios from 'axios'\r\nimport BaseUrl from \"../BaseUrl/BaseUrl\"\r\n\r\nexport default function PostReminderForm(props) {\r\n    const daysRef = useRef(null)\r\n    const formRef = useRef(null)\r\n    const [noDaysAdded, setNoDaysAdded] = useState(false)\r\n    const CHECKED_COLOR = \"green\"\r\n    const UNCHECKED_COLOR = \"rgb(211,211,211)\"\r\n\r\n    const onSumbit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        const formData = new FormData(formRef.current)\r\n        const reminder = formData.get(\"reminder\")\r\n        const time = formData.get(\"time\")\r\n\r\n        if(props.isSingleOccuring){   \r\n            const date = formData.get(\"date\")\r\n            const data = prepareSingleOccuringForm(date, time, reminder)\r\n\r\n            postReminder(data)\r\n        }else{\r\n            const data = prepareReoccuringForm(time, reminder)\r\n\r\n            postReminder(data)\r\n        }\r\n    }\r\n\r\n    const postReminder = async (data) => {       \r\n        console.log(\"data:\", data);\r\n        try {\r\n            const response = await axios.post(`${BaseUrl}`, data)\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const prepareSingleOccuringForm = (date, time, reminder) => {\r\n        resetForm()\r\n        return  {\r\n            time: getFormattedTime(time), \r\n            date, \r\n            reminder,\r\n        }\r\n    }\r\n\r\n    const prepareReoccuringForm = (time, reminder) => {\r\n        const daysChecked = getCheckedDays()\r\n\r\n        //If the user did not check any days, flash an error to the screen by setting the flag to true,\r\n        //and setting it to false 2 seconds later to remove it from the screen.\r\n        if(daysChecked.length === 0){\r\n            setNoDaysAdded(true)\r\n            setTimeout(() => {\r\n                setNoDaysAdded(false)\r\n            }, 2000);\r\n\r\n            return\r\n        }\r\n\r\n        resetForm()\r\n        return {\r\n            time: getFormattedTime(time),  \r\n            days: daysChecked, \r\n            reminder,\r\n        }\r\n    }\r\n\r\n    //Reference the \"Days\" component to allow this component to retrieve days checked as selected.\r\n    const getCheckedDays = () => {\r\n        let checkedDays = []\r\n\r\n        daysRef.current.querySelectorAll(\".day\").forEach(day => {\r\n            if(day.style.backgroundColor === CHECKED_COLOR){\r\n                checkedDays.push(day.textContent.trim())\r\n                day.style.backgroundColor = UNCHECKED_COLOR\r\n            }\r\n        })\r\n\r\n        return checkedDays\r\n    }\r\n    \r\n    const resetForm = () => {\r\n        document.querySelectorAll(\"input\").forEach(input => input.value = \"\");\r\n    }\r\n\r\n    //This function will format the time stamp to in the 12 hour format instead of the 24 hours format.\r\n    const getFormattedTime = (time) => {\r\n        let formattedTime = time.split(\":\")\r\n        let hour = parseInt(formattedTime[0])\r\n        let meridiem = (hour > 11) ? \"PM\" : \"AM\"\r\n    \r\n        if(hour > 12){\r\n            hour -= 12\r\n        }else if(hour === 0){\r\n            hour = 12\r\n        }\r\n    \r\n        return `${hour.toString()}:${formattedTime[1]} ${meridiem}`\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSumbit} ref={formRef}>\r\n            <div className=\"reminder-input-div\">\r\n                <label htmlFor=\"name-reminder\" className=\"label\">Reminder Name</label>\r\n                <input type=\"text\" id=\"reminder-input\" name=\"reminder\" placeholder=\"Enter reminder name\" required/>\r\n            </div>\r\n\r\n            {\r\n                props.isSingleOccuring \r\n                ?\r\n                 <div className=\"reminder-date-div\">\r\n                    <label htmlFor=\"date\" className=\"label\">Set date</label>\r\n                    <input type=\"date\" id=\"date\" name=\"date\" min={props.min} defaultValue={props.currentDate} required />\r\n                </div>\r\n                : \r\n                <Days noDaysAdded={noDaysAdded} innerRef={daysRef} getCheckedDays={getCheckedDays}/>\r\n            }\r\n\r\n            <div className=\"reminder-time-div\">\r\n                <label htmlFor=\"time\" className=\"label\">Set time</label>\r\n                <input type=\"time\" name=\"time\" id=\"timeSingleOccuring\" value={props.currentTime} onChange={props.adjustDateMinimum} required />\r\n            </div>\r\n\r\n            <button className=\"set-reminder-btn\">Set Reminder</button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react'\r\nimport './SetReminderPage.css'\r\nimport Nav from '../../components/Nav/Nav'\r\nimport PostReminder from '../../components/PostReminderForm/PostReminderForm'\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SetReminderPage() {\r\n    const [isSingleOccuring, setSingleOccuring] = useState(true)\r\n    const [date, setDate] = useState(\"\")\r\n    const [time, setTime] = useState(\"\")\r\n    const [dateMin, setDateMin] = useState(\"\")\r\n    const singleOccuringButtonRef = useRef(null)    \r\n    const reoccuringButtonRef = useRef(null)\r\n   \r\n    useEffect(() => {\r\n        const currentDate = new Date()\r\n        const formattedDate = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`\r\n        setDate(formattedDate)\r\n        setDateMin(formattedDate)\r\n        document.title = \"Set Reminder\"\r\n        \r\n        // dateInputRef.current.value = \"\"\r\n        singleOccuringButtonRef.current.classList.add(\"active\")\r\n    }, [])\r\n    \r\n    const setSingleOccuringTrue = () => {\r\n        setSingleOccuring(true)\r\n        singleOccuringButtonRef.current.classList.add(\"active\")\r\n        reoccuringButtonRef.current.classList.remove(\"active\")\r\n    }\r\n\r\n    const setSingleOccuringFalse = () => {\r\n        setSingleOccuring(false)\r\n        reoccuringButtonRef.current.classList.add(\"active\")\r\n        singleOccuringButtonRef.current.classList.remove(\"active\")\r\n    }\r\n\r\n    const adjustDateMinimum = (e) => {\r\n        const currentDate = new Date()\r\n        const currentTime = e.target.value.split(\":\")\r\n        const currentHour = currentDate.getHours();\r\n        const currentMintues = currentDate.getMinutes()\r\n        const inputHour = parseInt(currentTime[0])\r\n        const inputMinutes = parseInt(currentTime[1])\r\n    \r\n        //If the time put into the time input is LESS than the current time, push the minimum date one day forward.\r\n        if ((inputHour === currentHour && inputMinutes <= currentMintues) || inputHour < currentHour) {\r\n            setDateMin(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate() + 1}`)\r\n        }else{\r\n            setDateMin(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`)\r\n        }\r\n    \r\n        setTime(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Nav/>\r\n            <div className=\"title\">Set Your Reminder!</div>\r\n            <div className=\"set-reminder-btn-group\">\r\n                <button className=\"is-single-occuring\" ref={singleOccuringButtonRef} onClick={setSingleOccuringTrue}>Single Occuring</button>\r\n                <button className=\"is-reoccuring\"      ref={reoccuringButtonRef}     onClick={setSingleOccuringFalse}>Reoccuring</button>\r\n            </div>\r\n            <PostReminder \r\n                isSingleOccuring={isSingleOccuring}\r\n                min={dateMin} \r\n                currentDate={date} \r\n                currentTime={time}\r\n                adjustDateMinimum={adjustDateMinimum}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./404.css\"\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div className=\"not-found\">\r\n            Not found\r\n        </div>\r\n    )\r\n}\r\n","import './App.css'\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react'\nimport SignupPage from \"./pages/SignupPage/SignupPage\"\nimport SigninPage from './pages/SigninPage/SigninPage'\nimport DashboardPage from './pages/DashboardPage/DashboardPage'\nimport SetReminderPage from './pages/SetReminderPage/SetReminderPage'\nimport NotFound from './pages/404/404'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nexport default function App() {\n    return (\n      <Router>\n          <Switch>\n              <Route exact path=\"/\" component={DashboardPage}/>\n              <Route exact path=\"/set-reminder\" component={SetReminderPage}/>\n              <Route exact path=\"/signin\" component={SigninPage}/>\n              <Route exact path=\"/signup\" component={SignupPage}/>\n              <Route path=\"*\" component={NotFound}/>\n          </Switch>\n      </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}